{
  "hash": "05b7c7788ebd2f2259204784c8cb196e",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\ndraft: false\ncode-fold: true\n---\n\n\n\n\n\n\n# Survival analysis II {#sec-week6}\n**Last updated:** 17 Oct\\, 2024 09:38 AM EDT\n\n## A tale of the hazard\n\nLet's take a deeper dive into the hazard. \n\n### A mathematical approach\n\nThe hazard function at time _t_ is defined to be \n\n$$\nh(t) = \\lim_{\\Delta t \\rightarrow 0} \\frac{P(t \\leq T < t + \\Delta t | T > t)}{\\Delta t}\n$$\nThe numerator is the chance of experiencing an event right after time _t_ _given that there is no event experienced until time t_. So $h(t)$ is like a derivative. In fact, let's re-write the formula as \n\n$$\n\\begin{eqnarray*}\nh(t) &=& \\lim_{\\Delta t \\rightarrow 0} \\frac{F(t + \\Delta t) - F(t)}{\\Delta t}\\frac{1}{1-F(t)}\\\\\n&=& \\frac{1}{1-F(t)} \\frac{dF(t)}{dt}\\\\\n&=& f(t)/(1-F(t))\n\\end{eqnarray*}\n$$\nwhere $F(t) = P(T \\leq t)$ is the c.d.f., and $f(t) = dF(t)/dt$ is the p.d.f of the distribution of the followup time _T_. Turns out (if you remember basic calculus) that \n\n$$\nh(t) = -\\frac{d\\log S(t)}{dt}\n$$\nwhere $S(t) = 1-F(t)$. Because of this relationship, we can define the cumulative hazard \n\n$$H(t) = \\int_0^t h(u)du = -\\log S(t)$$\nand the inverse relationship between the survival and hazard functions is \n$$\nS(t) = \\exp\\left(-\\int_0^t h(u)du\\right) = \\exp(-H(t))\n$$\n\nThe hazard function is another way of defining the probability distribution of _T_, since there is a 1:1 relationship between $h(t)$ and $F(t)$ based on the equations above.\n\n### Trying to gain intuition\n\nSuppose N individuals are alive at age 50. We observe d deaths in the next x years. Then the observed x-year death rate among those who have reached 50 years would be d/N. Let's try and write this formulaicly.\n\n$$\nd = N P(50 < T \\leq 50 + x | T > 50)\\\\\nd/N = P(50 < T \\leq 50 + x | T > 50)\\\\\n$$\n\nYou can now consider the death rate _per unit time_ as the death rate divided by the time over which the deaths were observed.\n\n$$\n\\text{death rate per unit time} = P(50 < T \\leq 50 + x | T > 50)/x\n$$\n\n We can make the length x of the time intervals we measure smaller and smaller, and ask the same question: what is the death rate per unit time when deaths are observed over small time intervals after age 50. As x gets smaller, we will hit the hazard at age 50. This can be interpreted as the _instantaneous rate of dying_. \n\n With a little abuse of notation, we can write $h(t)dt = P(t < T \\leq t + dt | T > t)$ which gives the chance of dying in the tiny time interval $(t, t+\\Delta t]$given one has survived until time _t_. \n\n **Some more intuition**  \n\nLet's think about how the hazard function for different processes might look. Think of typical human populations. There is an increased chance of dying very early in life (the first year), which reduces over time to some steady value through the teen and adult years, then increases again late in life. This might look like this:\n\n![Patrick Breheny, https://myweb.uiowa.edu/pbreheny/7210/f19/notes/8-29.pdf](images/popln_hazard.png)\n\nThe chance that a car will have a serious problem increases with time, so you'd expect an increasing hazard function with age. There are, of course, processes where the hazard is constant over time; the chance that a light bulb fails, the chance that a radioactive object emits a particle. These proecesses are _memoryless_, since the chance of failure at any time doesn't depend on what has happened in the past. \n\nThe Weibull distribution gives us a way to model different hazard patterns (though strictly monotonic hazard functions). \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geomtextpath)\nd <- tibble(x = seq(0, 5, by = 0.1)) |>\n    mutate(\n        h1 = dweibull(x, 1, 1)/pweibull(x, 1, 1, lower.tail=F),\n        h2 = dweibull(x, 0.5, 1)/pweibull(x, 0.5, 1, lower.tail=F),\n        h3 = dweibull(x, 1.5, 1)/pweibull(x, 1.5, 1, lower.tail=F),\n        h4 = dweibull(x, 2, 1)/ pweibull(x, 2, 1, lower.tail=F))\nggplot(d, aes(x = x))+\n    geom_textline(aes(y = h1), color='blue',label = 'shape = 1')+\n    geom_textline(aes(y = h2), color = 'green', label = 'shape = 0.5') + \n    geom_textline(aes(y = h3), color = 'orange', label = 'shape = 1.5') +\n    geom_textline(aes(y = h4), color = 'red', label = 'shape = 2') +\n    labs(x='', y=\"Hazard function\", caption = \"Weibull with scale = 1\")+\n    scale_y_log10()+\n    theme_bw() \n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nThe corresponding survival curves look like this:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geomtextpath)\nd <- tibble(x = seq(0, 5, by = 0.1)) |>\n    mutate(\n        h1 = pweibull(x, 1, 1, lower.tail=F),\n        h2 = pweibull(x, 0.5, 1, lower.tail=F),\n        h3 = pweibull(x, 1.5, 1, lower.tail=F),\n        h4 = pweibull(x, 2, 1, lower.tail=F))\nggplot(d, aes(x = x))+\n    geom_textline(aes(y = h1), color='blue',label = 'shape = 1')+\n    geom_textline(aes(y = h2), color = 'green', label = 'shape = 0.5') + \n    geom_textline(aes(y = h3), color = 'orange', label = 'shape = 1.5') +\n    geom_textline(aes(y = h4), color = 'red', label = 'shape = 2') +\n    labs(x='', y=\"Survival probability\", caption = \"Weibull with scale = 1\")+\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![Survival curves of the Weibull distribution keeping scale constant and changing shape](week-06_files/figure-html/fig-weib1-1.png){#fig-weib1 width=672}\n:::\n:::\n\n\n\n\n\nNotice that for shape = 0.5, we have a decreasing hazard, which means the chance of failing is higher earlier, which is reflected in an early steep drop in the survival function. When shape = 2, we have an increasing hazard function, which means the chance of failing is later in time; we see the corresponding survival curve is flatter early and drops down later. \n\n::: {.callout-note}\nThe case of shape = 1 has a constant hazard, which results in an exponential distribution, _and vice versa_. \n\n$$\n\\begin{array}{lcl}\nh(t) = \\lambda &\\Leftrightarrow& -\\frac{d\\log S(t)}{dt} = \\lambda \\\\\n&\\Leftrightarrow & \\log S(t) = -\\lambda t \\\\\n&\\Leftrightarrow & S(t) = e^{-\\lambda t} \\\\\n&\\Leftrightarrow & \\text{Exponential distribution}\n\\end{array}\n$$\n\n:::\n\n::: {.callout-important}\n## The bathtub curve\nThis is a shape of the hazard curve that is used in engineering, but also reflects many demographic and biological processes.\n\n![https://en.wikipedia.org/wiki/Bathtub_curve](https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Bathtub_curve.svg/700px-Bathtub_curve.svg.png)\n\nThe Weibull hazard functions are always monotonic (so increasing or decreasing). The bathtub hazard function can be modeled as a [mixture of Weibull distributions](https://www.reliawiki.com/index.php/The_Mixed_Weibull_Distribution)\n\n:::\n\n### The hazard ratio\n\nSuppose you have two survival processes, e.g., survival under treatment of a drug, and survival under a placebo. They each define a hazard, $h_1(t)$ and $h_2(t)$. The **hazard ratio** at time $t$ is then $h_1(t)/h_2(t)$. This is interpreted as the relative chance of failing in each process, given no failures until time $t$. A hazard ratio of 1/2, for example, means that at time $t$, a person treated by a drug has half the chance of dying as a person receiving placebo. \n\nWhen we say that we have **proportional hazards**, it implies that the hazard ratio at any time $t$ doesn't depend on $t$. We can see this since we will have $h_1(t) = k h_2(t)$ for all $t$ (the proportionality criterion). \n\nWhat models exhibit proportional hazards?\n\n- Since the exponential model has a constant hazard function, the ratio of hazards for two exponential distributions is by definition a constant for all times.\n- The Weibull hazard function is $h(t) = \\lambda k t^{k-1}$. So we will have proportional hazards provided $k$ remains the same and only $\\lambda$ differs. From @fig-weib1, it is clear that keeping $\\lambda$ constant and changing $k$ doesn't result in a proportional hazards model. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geomtextpath)\nd <- tibble(x = seq(0, 5, by = 0.1)) |>\n    mutate(\n        h1 = pweibull(x, 1, 1, lower.tail=F),\n        h2 = pweibull(x, 1, 0.5, lower.tail=F),\n        h3 = pweibull(x, 1, 1.5, lower.tail=F),\n        h4 = pweibull(x, 1, 2, lower.tail=F))\nggplot(d, aes(x = x))+\n    geom_textline(aes(y = h1), color='blue',label = 'scale = 1')+\n    geom_textline(aes(y = h2), color = 'green', label = 'scale = 0.5') + \n    geom_textline(aes(y = h3), color = 'orange', label = 'scale = 1.5') +\n    geom_textline(aes(y = h4), color = 'red', label = 'scale = 2') +\n    labs(x='', y=\"Survival probability\", caption = \"Weibull with shape = 1 (exponential)\")+\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## Modeling the hazard function under PH\n\nWe now introduce the **Cox proportional hazard regression model**. This model, as in all hazard regression models, relates the hazard $h(t)$ to covariates ***x*** to model how your chance of failing is affected by the covariates. We start with a general form of the hazard function as it relates to the covariates\n\n$$\n\\lambda(t|x) = \\lambda_0(t)e^{x^T\\beta}\n$$\n\nIn what sense is this model a proportional hazards model? Consider two values of covariates $x_1$ and $x_2$. In that case, the hazard ratio is \n\n$$\n\\lambda(t|x_1)/\\lambda(t|x_2) = e^{(x_1-x_2)\\beta}\n$$\nwhich is independent of $t$ and just depends on the difference of the x-values. \n\nThe brilliance of the Cox model here is that it can be fit to data _ignoring what is going on with $\\lambda_0(t)$_, which is called the _baseline hazard_ (it's the value of the hazard function when $x=0$, hence \"baseline\"). The baseline hazard function is essentially **ignored**, and we can still get _consistent and unbiased_ estimates of the $\\beta$s. \n\n::: {.callout-note}\n\nThe paper that proposed this proportional hazards model (@coxRegressionModelsLifeTables1972) is the most cited paper in statistics. Cox then proposed the _partial likelihood_ (@cox:1975)\nThere was a bunch of theoretical work done in the 70's and 80's to prove that Cox regression \"works\" as expected under assumptions of proportional hazards and independent right censoring, which is the most common situation we face. \n\nCox regression has become a _de facto_ standard to model the hazard in survival studies, including most clinical trials.\n\n:::\n\nThe Cox model doesn't need to have just fixed or baseline covariates in it. It can have _time-dependent_ covariates as well, for example sequences of cholesterol measurements per person. Such models are no longer _proporational hazards_, but can be fit using the same modeling paradigm and are quite useful in real-life scenarios.\n\n## Fitting the Cox model in R\n\nThe Cox model is fit in R using the `coxph` function. This function is used very much like the `lm` and `glm` models, except that the dependent variable is the composite `Surv` function rather than a single variable. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(survival)\nm <- coxph(Surv(futime, death) ~ age + sex + alb, \n    data = mgus, \n    na.action = na.omit)\nbroom::tidy(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic  p.value\n  <chr>      <dbl>     <dbl>     <dbl>    <dbl>\n1 age       0.0608   0.00749      8.12 4.74e-16\n2 sexmale   0.249    0.148        1.68 9.32e- 2\n3 alb      -0.442    0.171       -2.58 9.87e- 3\n```\n\n\n:::\n:::\n\n\n\n\n\nGoing back to the form of the hazard in Cox regression, the hazard ratio can be written as \n\n$$\n\\lambda(t|x+1)/\\lambda(t|x) = e^{\\beta}\n$$\nTaking logs, \n\n$$\n\\log (HR) = \\beta\n$$\ni.e. the $\\beta$ coefficients can be interpreted as the log of the hazard ratio when the corresponding covariate changes by 1 unit. \nThe results of the Cox regression are thus in terms of **log-hazard ratios**. To make it easier to interpret, we can look at \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nbroom::tidy(m, exponentiate=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term    estimate std.error statistic  p.value\n  <chr>      <dbl>     <dbl>     <dbl>    <dbl>\n1 age        1.06    0.00749      8.12 4.74e-16\n2 sexmale    1.28    0.148        1.68 9.32e- 2\n3 alb        0.643   0.171       -2.58 9.87e- 3\n```\n\n\n:::\n:::\n\n\n\n\n\nUnder this fitted model, we interpret that your chance of dying increases 6% per year of age, males are 20% more likely to die than females, and a unit increase in albumin reduces your risk of dying around 35%. \n\n:::{.aside}\nThe HR for age is 1.06, which means if age increases 1 year, the hazard increases 1.06 times, so the change is 0.06 times the hazard at the reference year, so a 6% change\n:::\n\nSo fitting the model is quite straightforward and follows familiar patterns from linear and logistic regressions. The question that we must answer is, is this model a good fit to the data?\n\n### Checking the proporational hazards assumption\n\nSince we don't have time-dependent covariates, we are in the proporational hazards paradigm. So we can test whether the fitted model follows proportional hazards using the `cox.zph` function. This provides a statistical test to see if the model meets the proportional hazards assumption for each covariate. It also provides graphs for each variable estimating a time-dependent $\\beta(t)$ for each $\\beta$, with PH implying that $\\beta(t)$ is a horizontal line, i.e., independent of $t$.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncox.zph(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       chisq df    p\nage    0.258  1 0.61\nsex    0.148  1 0.70\nalb    0.154  1 0.69\nGLOBAL 0.817  3 0.85\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(cox.zph(m))\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n\n\n\n### Checking the fit of the model: Residual analysis\n\nWe're used to analyzing residuals in linear regression to see if there might be additional signal in the data, or unequal variances. These residuals are merely the difference between the actual and fitted values of the dependent variable. It's not quite so straightforward in survival studies when you have a composite dependent variable, and some obsevations are censored. Different types of residuals have been proposed. \n\n- Cox-Snell residuals look at overall goodness-of-fit of a model. For a well-fitting model, they should look like samples from an exponential(1) distribution\n- Martingale residuals, related to the Cox-Snell residuals, can be used to evaluate whether the appropriate functional form of a covariate has been used in the model\n- Schoenfeld residuals are used (in the `cox.zph` function above) to see the validity of the proportional hazards assumption\n\nThe martingale residuals can be generated using the `residual` function on a `coxph` object. A convenient way of doing this is using the `broom::augment` function [See the help for `broom::augment.coxph`]{.aside}. \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(broom)\nout <- augment(m, data=mgus, type.residuals = 'martingale')\n```\n:::\n\n\n\n\n\nWe can compute the Cox-Snell residuals as the status variable (`death`) - the martingale residuals (`.resid`). \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nout <- out |> \n    mutate(cs_resid = death - .resid)\n```\n:::\n\n\n\n\n\n::: callout-tip\nOne issue with Cox-Snell residuals is that they only tell you if the fit is good. They don't tell you how to fix things if the fit is bad\n:::\n\nTo check for overall goodness-of-fit of the Cox model, you can check the distribution of the Cox-Snell residuals against the exponential distribution using the complementary log-log plot we've seen before, based on the estimated survival function below:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nsurv_estimate <- survfit(Surv(cs_resid, death)~1, data = out)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\nYou can look at the appropriateness of the functional form of the continuous predictors (so, whether we need to transform the predictors or not to get a better fit) by plotting the martingale residuals against the predictor:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(out, aes(x = age, y = .resid))+\n    geom_point() + \n    geom_smooth(se=F) + \n    labs(x = 'Age', y = 'Martingale residuals')\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\nAn adequate fit is indicated by the smooth fitted curve looking like a horizontal straight line. Other patterns are indicative of the need to transform the predictor.\n\n### The concordance index\n\nHarrell's C-index (or the _concordance index_) is a summary measure of the predictive strength of a survival model. It is basically asking, if individual _i_ fails earlier than individual _j_, is the corresponding predicted risk of failure for individual _i_ greater than the predicted risk for individual _j_, averaged over all pairs of individuals who failed. It is a number between 0 and 1, with 1 denoting a perfect predictive model and 0.5 a model whose predictions are no better than random [This should seem familiar]{.aside}.\n\n\nWe can potentially use the c-index to see if adding or subtracting features improves the discrimative power of the survival model. We will re-visit the C-index when we think about machine learning in the survival context. \n\n\n## Accelerated Failure Time models\n\nAccelerated failure time (AFT) models are another class of regression models used in survival analysis. They ask a different question to the proportional hazards model and how covariates affect survival. The basic idea (using a binary covariate) is that the presence of the covariate x accelerates or decelerates your survival time (or time to failure) on average. The general model is \n\n$$\n\\log (T) = X\\beta + W\n$$\nwhere $W_i ~ f$ are the error terms. For example $f$ could be a $N(0,\\sigma^2)$ distribution or an extreme value distribution or other distributions. Note that, if we didn't have any censoring, we could fit this model using least squares. However, in the survival context, we do have censoring.\n\nIf we start with this form, and we consider a baseline process $T_0$ which is the random variable denoting survival time when all the covariates are 0 (so $T_0 \\equiv e^W$), then we have\n\n$$\nT = T_0 e^{X\\beta}\n$$\n\nSo in this model, the covariates act multiplicatively on **time**, so if $e^{X\\beta}=2$, then the subject with covariates $X$ will have twice the survival times, or in other words, will age at half the time (The same value of the survival function will be achieved at double of each time point). \n\n$$\nS(t) = S_0(e^{X\\beta}t)\n$$\nwhich means\n\n$$\\lambda(t) = e^{X\\beta} \\lambda_0(e^{X\\beta}t)$$\n[Recall that for a PH model, $\\lambda(t) = \\phi \\lambda_0(t)$ for some constant $\\phi$]{.aside}\n\nLet's look at this a bit further. We see that the PH model changes the hazard function vertically, while the AFT model changes the hazard function horizontally. \n\n:::{.panel-tabset}\n## Hazard\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT <- seq(0, 5, by = 0.1)\nh0 <- dlnorm(T)/plnorm(T, lower.tail=F)\nh_ph <- h0 * 2\nh_aft <- 1/3 * dlnorm(1/3*T)/plnorm(1/3*T, lower.tail=F)\nplot_dat <- tibble(T, h0, h_ph, h_aft)\nggplot(plot_dat, aes(x = T))+\n    geom_line(aes(y = h0, color = 'baseline'))+\n    geom_line(aes(y = h_ph, color = \"PH\")) +\n    geom_line(aes(y = h_aft, color = \"AFT\"))+\n    scale_color_manual(\"\", values = c(\n        'baseline' = 'blue',\n        'PH' = 'red',\n        'AFT' = 'green'\n    )) + \n        scale_x_continuous('Time')+\n        scale_y_continuous('Hazard')\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Log-hazard\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nT <- seq(0, 5, by = 0.1)\nh0 <- dlnorm(T)/plnorm(T, lower.tail=F)\nh_ph <- h0 * 2\nh_aft <- 1/3 * dlnorm(1/3*T)/plnorm(1/3*T, lower.tail=F)\nplot_dat <- tibble(T, h0, h_ph, h_aft)\nggplot(plot_dat, aes(x = T))+\n    geom_line(aes(y = h0, color = 'baseline'))+\n    geom_line(aes(y = h_ph, color = \"PH\")) +\n    geom_line(aes(y = h_aft, color = \"AFT\"))+\n    scale_color_manual(\"\", values = c(\n        'baseline' = 'blue',\n        'PH' = 'red',\n        'AFT' = 'green'\n    )) + \n        scale_x_log10('Time')+\n        scale_y_log10('Hazard')\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n\n:::\n\nIf we look at the survival curves for the same hazards, we see that the shape of the AFT model changes from the PH model, which is more evident in the complementary log-log plot. \n\n::: {.panel-tabset}\n## Survival\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns0 = plnorm(T, lower.tail = F)\ns_ph = s0^2\ns_aft = plnorm(1/3*T, lower.tail = F)\nplot_dat <- tibble(T, s0, s_ph, s_aft)\nggplot(plot_dat, aes(x = T))+\n    geom_line(aes(y = s0, color = 'baseline'))+\n    geom_line(aes(y = s_ph, color = \"PH\")) +\n    geom_line(aes(y = s_aft, color = \"AFT\"))+\n    scale_color_manual(\"\", values = c(\n        'baseline' = 'blue',\n        'PH' = 'red',\n        'AFT' = 'green'\n    )) + \n        scale_x_continuous('Time')+\n        scale_y_continuous('Survival')\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Complementary log-log\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns0 = plnorm(T, lower.tail = F)\ns_ph = s0^2\ns_aft = plnorm(1/3*T, lower.tail = F)\nplot_dat <- tibble(T, s0, s_ph, s_aft)\nggplot(plot_dat, aes(x = log(T)))+\n    geom_line(aes(y = log(-log(s0)), color = 'baseline'))+\n    geom_line(aes(y = log(-log(s_ph)), color = \"PH\")) +\n    geom_line(aes(y = log(-log(s_aft)), color = \"AFT\"))+\n    scale_color_manual(\"\", values = c(\n        'baseline' = 'blue',\n        'PH' = 'red',\n        'AFT' = 'green'\n    )) + \n        scale_x_continuous('log(Time)')+\n        scale_y_continuous('log(-log(Survival))')\n```\n\n::: {.cell-output-display}\n![](week-06_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n:::{.callout-note}\nNote that if we have a hazard function that is linear on the log-time vs log-hazard scale, then a vertical shift and a horizontal shift look the same. This is a characteristic of the Weibull distribution, so it can follow both a PH and a AFT model (albeit with slightly different parametrizations) \n\nIf we fit a Weibull model with the `survreg` function, which only fits AFT models, we can get the parameter estimates of the corresponding PH model using `b.ph = -b.aft / fit.aft$scale`. \n\n:::\n\nThese models can be fit using the functions `survival::survreg`.\n\n### Example\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(survival)\nlibrary(eha)\n\nm1 <- coxph(Surv(time, status==2) ~ trt + stage + hepato + bili, data = pbc)\nm2 <- survreg(Surv(time, status==2) ~  trt + stage + hepato + bili, data = pbc)\n```\n:::\n\n\n\n\n\n::: {.panel-tabset}\n## Cox\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  term   estimate std.error statistic  p.value\n  <chr>     <dbl>     <dbl>     <dbl>    <dbl>\n1 trt      -0.168    0.181     -0.930 3.52e- 1\n2 stage     0.644    0.139      4.64  3.44e- 6\n3 hepato    0.350    0.230      1.52  1.28e- 1\n4 bili      0.140    0.0146     9.63  5.99e-22\n```\n\n\n:::\n:::\n\n\n\n\n\n## AFT\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  term        estimate std.error statistic   p.value\n  <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  10.0      0.388      25.9   2.00e-147\n2 trt           0.0988   0.126       0.782 4.34e-  1\n3 stage        -0.454    0.100      -4.53  5.93e-  6\n4 hepato       -0.239    0.162      -1.48  1.38e-  1\n5 bili         -0.0970   0.00993    -9.77  1.47e- 22\n6 Log(scale)   -0.356    0.0742     -4.80  1.63e-  6\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\nGenerally speaking, the coefficients are opposite signs. Why?\n\n",
    "supporting": [
      "week-06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}